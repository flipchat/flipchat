--
-- COMP 421: Assignment 4 - MapReduce
-- Question 02
-- Group 40
--
------------------------------------------------------------------------------------

1. How many Maps and Reduces are generated in each job?

    Job 1: 1 Map, 0 Reduce
    Job 2: 2 Maps, 1 Reduce

2. What does the schema look like just after the join?

    result: {
        winners::date: bytearray,
        winners::type: chararray,
        winners::parl: int,
        winners::prov: chararray,
        winners::riding: chararray,
        winners::lastname: chararray,
        winners::firstname: chararray,
        winners::gender: chararray,
        winners::occupation: chararray,
        winners::party: chararray,
        winners::votes: int,
        winners::percent: double,
        winners::elected: int,
        losers::date: bytearray,
        losers::type: chararray,
        losers::parl: int,
        losers::prov: chararray,
        losers::riding: chararray,
        losers::lastname: chararray,
        losers::firstname: chararray,
        losers::gender: chararray,
        losers::occupation: chararray,
        losers::party: chararray,
        losers::votes: int,
        losers::percent: double,
        losers::elected: int
    }

3. How long did the query run?

    Pig script completed in 1 minute, 5 seconds and 193 milliseconds (65193 ms)


------------------------------------------------------------------------------------

Now modify this script to have your join step run with 4 reduce tasks.

1. How many Maps and Reduces are generated in each job?

    Job 1: 1 Map, 0 Reduce
    Job 2: 2 Maps, 4 Reduces

2. How long did the query run?

    Pig script completed in 50 seconds and 346 milliseconds (50346 ms)

3. Is the difference in query execution time what you were expecting? Describe what you were expecting to see and (if that is not what happened in the end) why you think it did not happen?

    By increasing parallelism 4 times, one might expect 4x increase in performance and consequently 4x faster execution.
    However, the test showed that for given dataset, using 4 reduce tasks provided only a 15 second increase.
    This is due to overhead is created by increased parallelism.

------------------------------------------------------------------------------------